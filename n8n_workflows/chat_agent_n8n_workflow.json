{
  "name": "chat_agent",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        960,
        -100
      ],
      "id": "78c1e958-57ca-49eb-8cfb-61604a44689a",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionId || $json.session_id || 'healthcare_session' }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1200,
        280
      ],
      "id": "82d59736-27c6-4362-9dd1-c0280a0bbdf6",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "={{ $json.message }}",
        "options": {
          "systemMessage": "You are the communication agent of a dermatology practice.\n\nYOUR TASK, EVERY TURN\n────────────────────────────────\n1. You receive a \"message\" parameter from SupervisorAgent containing:\n   - The original user query\n   - RAG search results from the medical database\n   - Instructions for creating German medical response\n\n2. Compose ONE concise, professional reply in **German** only.\n\nREPLY LOGIC\n────────────────────────────────\nA. If the message contains medical information from RAG database:\n   • Extract the most relevant diagnosis and treatment from the provided data\n   • Replace placeholders with REAL medical content\n   • Reply template (German):  \n     Guten Tag!  \n     Basierend auf Ihrer Beschreibung deutet dies auf **[EXTRACT REAL DIAGNOSIS from message data]** hin.  \n     Empfohlene Maßnahmen:\n     • [EXTRACT REAL TREATMENT_1 from message data]\n     • [EXTRACT REAL TREATMENT_2 from message data]\n     ⚠️ Wichtiger Hinweis: Diese Einschätzung ersetzt nicht die persönliche ärztliche Beratung.  \n     Möchten Sie einen Termin vereinbaren?\n\nB. If no medical information is available or marked \"low_confidence\":\n   → Reply:  \n     Es konnten keine passenden Informationen gefunden werden.  \n     Bitte teilen Sie uns weitere Details mit:\n     • Wie lange bestehen die Beschwerden bereits?\n     • Welche genaue Körperregion ist betroffen?\n\nC. If message contains emergency keywords (`Notfall`, `akut`, `starke Schmerzen`):\n   → Reply:  \n     🚨 DRINGEND: Kontaktieren Sie SOFORT:\n     • Praxis-Notfall: 089-123456\n     • Bereitschaftsdienst: 116 117\n     • Lebensbedrohlich: 112\n\nD. For administrative confirmations:\n   • Summarise the successful action, e.g.  \n     - Ihr Termin wurde für 14.08. um 15:00 Uhr eingetragen.\n     - Die E-Mail-Antwort wurde versendet.\n   • Keep it short and formal.\n\nSTYLE RULES\n────────────────────────────────\n* Output **plain German text**, no JSON, no code fence, no emojis.  \n* Address the user neutrally („Guten Tag\"), no first names.  \n* Extract REAL medical content from the message data - do not use placeholders like [SYMPTOM], [DIAGNOSE]\n* Never reveal internal tool names or logic.\n* Always include medical disclaimer for medical advice\n\nCRITICAL: Look for actual medical terms, diagnosis names, and treatment recommendations in the message content and use those instead of placeholders!\n\nOUTPUT\n────────────────────────────────\nReturn **only** the final German message with REAL medical content extracted from the input – nothing else.",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1180,
        -100
      ],
      "id": "21492e0c-1988-42cd-b1da-0699d41527be",
      "name": "chat_agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "llama3.1:8b-instruct-q4_K_M",
          "mode": "list",
          "cachedResultName": "llama3.1:8b-instruct-q4_K_M"
        },
        "options": {
          "maxTokens": 4096,
          "responseFormat": "text",
          "presencePenalty": 0,
          "temperature": 0.2,
          "timeout": 120000,
          "topP": 0.9
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1000,
        280
      ],
      "id": "6f2265c4-6ece-4ca6-960c-4fc816360279",
      "name": "Llama3",
      "credentials": {
        "openAiApi": {
          "id": "OksK044LOVHGEoet",
          "name": "Ollama"
        }
      }
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "Reply to Leon. Tell him we're on for Friday."
        }
      }
    ]
  },
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "chat_agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "chat_agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Llama3": {
      "ai_languageModel": [
        [
          {
            "node": "chat_agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "chat_agent": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9dbd79cf-4544-474c-be9d-a17fc2d9e207",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c321abd01d88d8b47aec82694d51dafefcde21b576cf168decfc6e6e2db7b807"
  },
  "id": "IE4TgpHypqfWWPm7",
  "tags": [
    {
      "createdAt": "2025-07-21T10:48:25.411Z",
      "updatedAt": "2025-07-21T10:48:25.411Z",
      "id": "LPLZ5ctgOVg5ZC7c",
      "name": "Praxis Box"
    }
  ]
}